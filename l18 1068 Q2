#include <iostream>

using namespace std;

template <typename T>
class Pair{
	T values [2];
public:
	Pair(T a, T b){
	 	values[0] = a;
		values[1] = b;
	}

	getMax(){
		if ( values[0] > values[1]){
			return values[0];
		}
		else{
			return values[1];
		}
	}
	getMin(){
		if ( values[0] < values[1]){
			return values[0];
		}
		else{
			return values[1];
		}	
	}
	
	friend operator << ostream& (ostream& out, const Pair& p){
		out << values[0];
		out << values[1] << endl;
	}
};


int main (){
  Pair <double> myobject (1.012, 1.01234);
  cout<<myobject.getMax()<<endl;
  cout<<myobject.getMin()<<endl;
  cout<<myobject<<endl; // << operator in pairs should be overloaded (inline)
  return 0;
}
